{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciorene/Documents/github/login-react/src/Component/Forgotpassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../reducer/login\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [userPassword, setUserPassword] = useState();\n  const [confirmUserPassword, setConfirmUserPassword] = useState();\n  const [passwordWarningStyle, setPasswordWarningStyle] = useState({\n    color: 'red',\n    display: 'none'\n  });\n  const dispatch = useDispatch();\n  const newPassword = e => {\n    e.preventDefault();\n    const passwordLength = userPassword === null || userPassword === void 0 ? void 0 : userPassword.length;\n    if (passwordLength < 8 || passwordLength == null) {\n      console.log('contrasena corta');\n    }\n    if (userPassword != confirmUserPassword) {\n      console.log('contrasena no coincide');\n    }\n    dispatch(changeUser({\n      userpassword: userPassword\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Create new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setUserPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setConfirmUserPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: passwordWarningStyle,\n        children: \"Password needs to be 8 characters or more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Main\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newPassword,\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ForgotPassword, \"bqxADeEJRCITOTwMgwZCE8TlV40=\", false, function () {\n  return [useDispatch];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useDispatch","changeUser","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","userPassword","setUserPassword","confirmUserPassword","setConfirmUserPassword","passwordWarningStyle","setPasswordWarningStyle","color","display","dispatch","newPassword","e","preventDefault","passwordLength","length","console","log","userpassword","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","required","style","to","onClick","_c","$RefreshReg$"],"sources":["/Users/ignaciorene/Documents/github/login-react/src/Component/Forgotpassword.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../reducer/login\";\nimport { Link } from \"react-router-dom\";\n\nconst ForgotPassword = ()=>{\n    const [userPassword,setUserPassword]=useState()\n    const [confirmUserPassword,setConfirmUserPassword]=useState()\n    const [passwordWarningStyle,setPasswordWarningStyle]=useState({color:'red',display:'none'})\n\n    const dispatch=useDispatch()\n\n    const newPassword=(e)=>{\n        e.preventDefault()\n\n        const passwordLength=userPassword?.length\n\n        if(passwordLength<8 || passwordLength==null){\n            console.log('contrasena corta')\n        }\n\n        if(userPassword!=confirmUserPassword){\n            console.log('contrasena no coincide')\n        }\n\n        dispatch(changeUser({\n            userpassword:userPassword\n        }))\n\n    }\n\n    return(\n        <>\n            <div>Create new password</div>\n            <form>\n                <label>New password</label>\n                <input type=\"password\" onChange={(e)=>setUserPassword(e.target.value)} required />\n\n                <label>Confirm new password</label>\n                <input type=\"password\" onChange={(e)=>setConfirmUserPassword(e.target.value)} required />\n                <p style={passwordWarningStyle}>Password needs to be 8 characters or more</p>\n\n                <Link to='/Main'>\n                    <button onClick={newPassword}>Change password</button>\n                </Link>\n            </form>\n        </>\n    )\n}\n\nexport default ForgotPassword"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAACX,QAAQ,CAAC,CAAC;EAC/C,MAAM,CAACY,mBAAmB,EAACC,sBAAsB,CAAC,GAACb,QAAQ,CAAC,CAAC;EAC7D,MAAM,CAACc,oBAAoB,EAACC,uBAAuB,CAAC,GAACf,QAAQ,CAAC;IAACgB,KAAK,EAAC,KAAK;IAACC,OAAO,EAAC;EAAM,CAAC,CAAC;EAE3F,MAAMC,QAAQ,GAACjB,WAAW,CAAC,CAAC;EAE5B,MAAMkB,WAAW,GAAEC,CAAC,IAAG;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,cAAc,GAACZ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEa,MAAM;IAEzC,IAAGD,cAAc,GAAC,CAAC,IAAIA,cAAc,IAAE,IAAI,EAAC;MACxCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC;IAEA,IAAGf,YAAY,IAAEE,mBAAmB,EAAC;MACjCY,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC;IAEAP,QAAQ,CAAChB,UAAU,CAAC;MAChBwB,YAAY,EAAChB;IACjB,CAAC,CAAC,CAAC;EAEP,CAAC;EAED,oBACIL,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9B1B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B1B,OAAA;QAAO2B,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAGb,CAAC,IAAGT,eAAe,CAACS,CAAC,CAACc,MAAM,CAACC,KAAK,CAAE;QAACC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElF1B,OAAA;QAAAsB,QAAA,EAAO;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnC1B,OAAA;QAAO2B,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAGb,CAAC,IAAGP,sBAAsB,CAACO,CAAC,CAACc,MAAM,CAACC,KAAK,CAAE;QAACC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzF1B,OAAA;QAAGgC,KAAK,EAAEvB,oBAAqB;QAAAa,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE7E1B,OAAA,CAACF,IAAI;QAACmC,EAAE,EAAC,OAAO;QAAAX,QAAA,eACZtB,OAAA;UAAQkC,OAAO,EAAEpB,WAAY;UAAAQ,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACT,CAAC;AAEX,CAAC;AAAAtB,EAAA,CA3CKD,cAAc;EAAA,QAKDP,WAAW;AAAA;AAAAuC,EAAA,GALxBhC,cAAc;AA6CpB,eAAeA,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}