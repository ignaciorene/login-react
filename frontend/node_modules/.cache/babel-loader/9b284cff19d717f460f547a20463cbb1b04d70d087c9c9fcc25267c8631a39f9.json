{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../Features/authService\";\n\n//Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\n\n//Register user\nexport const register = createAsyncThunk('userdata/signup', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n//Login user\nexport const login = createAsyncThunk('userdata/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n//Delete user\nexport const deleteUser = createAsyncThunk('userdata/deleteuser/', async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().userData.user.token;\n    return await authService.deleteUser(id, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n//Update user\nexport const update = createAsyncThunk('userdata/updateuser/', async (user, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().userData.user.token;\n    return await authService.update(user, id, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n//Logout\nexport const logout = createAsyncThunk('userdata/logout', async () => {\n  await authService.logout();\n});\nexport const userDataSlice = createSlice({\n  name: 'userData',\n  initialState: {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n  },\n  reducers: {\n    reset: state => {\n      state.user = null;\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(deleteUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = null;\n    }).addCase(deleteUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(update.pending, state => {\n      state.isLoading = true;\n    }).addCase(update.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(update.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = userDataSlice.actions;\nexport default userDataSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","register","thunkAPI","error","message","response","data","toString","rejectWithValue","login","deleteUser","id","token","getState","userData","update","logout","userDataSlice","name","initialState","isError","isSuccess","isLoading","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/ignaciorene/Documents/github/login-react/frontend/src/reducer/userReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../Features/authService\";\n\n//Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'))\n\n//Register user\nexport const register = createAsyncThunk('userdata/signup', async (user, thunkAPI)=>{\n    try{\n        return await authService.register(user)\n    }catch(error){\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n//Login user\nexport const login = createAsyncThunk('userdata/login', async (user, thunkAPI)=>{\n    try{\n        return await authService.login(user)\n    }catch(error){\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n//Delete user\nexport const deleteUser =createAsyncThunk('userdata/deleteuser/', async (id, thunkAPI)=>{\n    try{\n        const token = thunkAPI.getState().userData.user.token\n\n        return await authService.deleteUser(id, token)\n    }catch(error){\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n//Update user\nexport const update =createAsyncThunk('userdata/updateuser/', async (user, thunkAPI)=>{\n    try{\n        const token = thunkAPI.getState().userData.user.token\n\n        return await authService.update(user,id, token)\n    }catch(error){\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n//Logout\nexport const logout=createAsyncThunk('userdata/logout', async ()=>{\n    await authService.logout()\n})\n\nexport const userDataSlice = createSlice({\n    name:'userData',\n    initialState:{\n        user:user ? user : null,\n        isError: false,\n        isSuccess: false,\n        isLoading:false,\n        message:''\n    },\n    reducers:{\n        reset: (state)=>{\n            state.user = null\n            state.isError=false\n            state.isLoading=false\n            state.isSuccess=false\n            state.message=''\n        }\n    },\n    extraReducers: (builder) =>{\n        builder\n            .addCase(register.pending, (state)=>{\n                state.isLoading=true\n            })\n            .addCase(register.fulfilled, (state,action)=>{\n                state.isLoading=false\n                state.isSuccess=true\n                state.user=action.payload\n            })\n            .addCase(register.rejected, (state,action)=>{\n                state.isLoading=false\n                state.isError=true\n                state.message=action.payload\n                state.user=null\n            })\n            .addCase(login.pending, (state)=>{\n                state.isLoading=true\n            })\n            .addCase(login.fulfilled, (state,action)=>{\n                state.isLoading=false\n                state.isSuccess=true\n                state.user=action.payload\n            })\n            .addCase(login.rejected, (state,action)=>{\n                state.isLoading=false\n                state.isError=true\n                state.message=action.payload\n                state.user=null\n            })\n\n            .addCase(deleteUser.pending, (state)=>{\n                state.isLoading=true\n            })\n            .addCase(deleteUser.fulfilled, (state,action)=>{\n                state.isLoading=false\n                state.isSuccess=true\n                state.user=null\n            })\n            .addCase(deleteUser.rejected, (state,action)=>{\n                state.isLoading=false\n                state.isError=true\n                state.message=action.payload\n            })\n\n            .addCase(update.pending, (state)=>{\n                state.isLoading=true\n            })\n            .addCase(update.fulfilled, (state,action)=>{\n                state.isLoading=false\n                state.isSuccess=true\n                state.user=action.payload\n            })\n            .addCase(update.rejected, (state,action)=>{\n                state.isLoading=false\n                state.isError=true\n                state.message=action.payload\n            })\n\n            .addCase(logout.fulfilled, (state)=>{\n                state.user=null\n            })\n    }\n})\n\nexport const {reset}=userDataSlice.actions\n\nexport default userDataSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}