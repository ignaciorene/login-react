{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../Features/authService\";\n\n//Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\n\n//Register user\nexport const register = createAsyncThunk('userdata/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const userDataSlice = createSlice({\n  name: 'userData',\n  initialState: {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n  },\n  reducers: {\n    newUser: (state, action) => {\n      state.username = action.payload.username;\n      state.userage = action.payload.userage;\n      state.usermail = action.payload.usermail;\n      state.userpassword = action.payload.userpassword;\n      state.validuser = true;\n    },\n    changeUser: (state, action) => {\n      state.username = action.payload.username;\n      state.userage = action.payload.userage;\n      state.usermail = action.payload.usermail;\n      state.userpassword = action.payload.userpassword;\n      state.validuser = true;\n    },\n    deleteUser: state => {\n      state.username = '';\n      state.userage = 0;\n      state.usermail = '';\n      state.userpassword = '';\n      state.validuser = false;\n      state.user = null;\n    },\n    reset: state => {\n      state.user = null;\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  newUser,\n  changeUser,\n  deleteUser,\n  reset\n} = userDataSlice.actions;\nexport default userDataSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","register","thunkAPI","error","message","response","data","toString","rejectWithValue","userDataSlice","name","initialState","isError","isSuccess","isLoading","reducers","newUser","state","action","username","payload","userage","usermail","userpassword","validuser","changeUser","deleteUser","reset","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/ignaciorene/Documents/github/login-react/frontend/src/reducer/userReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../Features/authService\";\n\n//Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'))\n\n//Register user\nexport const register = createAsyncThunk('userdata/register', async (user, thunkAPI)=>{\n    try{\n        return await authService.register(user)\n    }catch(error){\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const userDataSlice = createSlice({\n    name:'userData',\n    initialState:{\n        user:user ? user : null,\n        isError: false,\n        isSuccess: false,\n        isLoading:false,\n        message:''\n    },\n    reducers:{\n        newUser: (state,action)=>{\n            state.username = action.payload.username\n            state.userage=action.payload.userage\n            state.usermail=action.payload.usermail\n            state.userpassword=action.payload.userpassword\n            state.validuser=true\n        },\n        changeUser: (state,action)=>{\n            state.username = action.payload.username\n            state.userage=action.payload.userage\n            state.usermail=action.payload.usermail\n            state.userpassword=action.payload.userpassword\n            state.validuser=true\n        },\n        deleteUser: (state)=>{\n            state.username=''\n            state.userage=0\n            state.usermail=''\n            state.userpassword=''\n            state.validuser=false\n            state.user=null\n        },\n        reset: (state)=>{\n            state.user = null\n            state.isError=false\n            state.isLoading=false\n            state.isSuccess=false\n            state.message=''\n        }\n    },\n    extraReducers: (builder) =>{\n        builder\n            .addCase(register.pending, (state)=>{\n                state.isLoading=true\n            })\n            .addCase(register.fulfilled, (state,action)=>{\n                state.isLoading=false\n                state.isSuccess=true\n                state.user=action.payload\n            })\n            .addCase(register.rejected, (state,action)=>{\n                state.isLoading=false\n                state.isError=true\n                state.message=action.payload\n                state.user=null\n            })\n    }\n})\n\nexport const {newUser,changeUser,deleteUser,reset}=userDataSlice.actions\n\nexport default userDataSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}